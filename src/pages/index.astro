---
import { getCollection } from "astro:content";
import { Image } from "astro:assets"

import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import ExperienceCard from "@/components/ExperienceCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";

import presentation from "@/data/presentation";
import projects from "@/data/projects";
import experience from "@/data/experience";
import moment from "moment";

const posts = (await getCollection("posts")).sort(function (first, second) {
  return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
});

 

---

<Layout>
  <main class="flex flex-col gap-20">
    <article
      class="flex flex-col gap-8 md:flex-row-reverse md:justify-end md:gap-12 font-normal"
    >
      {
        presentation.profile && (
          <Image
            src={presentation.profile}
            class="w-1/4 self-center rounded-full"
            alt="Your Profile"
            width="200"
            height="200"
          />
        )
      }

      <div class="flex flex-col gap-8">
        <h1 class="text-3xl text-neutral-100">
          {presentation.title}
        </h1>

        <h2
          class="w-auto max-w-[100ch] leading-6"
          set:html={convertAsteriskToStrongTag(presentation.description)}
        />

        <SocialLinks />
      </div>
    </article>

   

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <div class="">
          <h3 class="text-lg text-neutral-100">
            Projects
          </h3>
          <h6>Unveiling My Work: Projects that Shape My Learning Experience</h6>
        </div>
        <Link href="/projects" label="see all" isUnderline target="_self" />
      </header>
      {projects.length === 0 && <p>Oops, I must work</p>}

      <section class="grid sm:grid-cols-2 md:grid-cols-2 gap-4">
        {
          projects.length !== 0 &&
            projects.slice(0, 4).map((project) => <ProjectCard {...project} />)
        }
      </section>
    </article>

     <!-- <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">Latest posts</h3>
        <Link href="/posts" label="See all posts" isUnderline target="_self" />
      </header>
      {posts.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}
      <h5 class="text-sm text-neutral-100">Soon, stay connected ðŸ‘€...</h5>

      <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
        {
          posts.length !== 0 &&
            posts
              .slice(0, 2)
              .map((post) => (
                <PostCard
                  publishedAt={post.data.publishedAt}
                  title={post.data.title}
                  description={post.data.description}
                  slug={post.slug}
                />
              ))
        }
      </section>
    </article> -->

    <!-- <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">Get in touch</h3>
      </header>
      <p>
        Email me at <Link
          href={`mailto:${presentation.mail}`}
          label={presentation.mail}
        /> or follow me via my social links.
      </p>

      <SocialLinks />
    </article> -->    
    
    <!-- <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-neutral-100">
          Experiences ({experience.length})
        </h3>
        <Link href="/experience" label="see all" isUnderline target="_self" />
      </header>
      {experience.length === 0 && <p>Oops, I must work ðŸ¤£</p>}

      <section class="flex flex-col md:flex-col gap-4">
        {
          experience.length !== 0 &&
            experience.map((experience) => <ExperienceCard {...experience} />)
        }
      </section>
    </article> -->

    

  </main>

  
  <article class="relative flex justify-between mt-auto">
    <p class="text-text/50">Â© {new Date().getFullYear()}</p>
    <p>{moment().format("dddd - MMM Do")}</p>

    <script type="text/javascript" charset="utf-8">
      let a;
      let time;
      setInterval(() => {
        a = new Date();
        time = a.getHours() + ':' + a.getMinutes() + ':' + a.getSeconds();
        document.getElementById('time').innerHTML = time;
      }, 10);
    </script>

    <span id="time"></span>
  </article>
</Layout>
